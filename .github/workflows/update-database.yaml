name: update-database

on:
  # Triggers the workflow on issue close.
  issues:
    types: [closed]
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
  # If we make any changes to the repository manually, this will ensure that the database stays up-to-date with the timestamp on the repo.
  push:

jobs:
  check-permission:
    runs-on: ubuntu-latest
    outputs:
      authorised: ${{ steps.check-permission.outputs.authorised }}
    steps:
      - name: Determine if user has permission to update the database
        id: check-permission
        run: |
          USER=${{ github.event.sender.login }}
          REPO=${{ github.repository }}
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/collaborators/$USER/permission")
          PERMISSION=$(echo "$RESPONSE" | sed -n 's/.*"permission": "\(.*\)".*/\1/p')          
          if [ "$PERMISSION" = "admin" ] || [ "$PERMISSION" = "maintain" ] || [ "$PERMISSION" = "write" ]; then
            AUTHORISED="true"
          else
            AUTHORISED="false"
          fi
          
          # TODO: Debug.
          echo "DEBUG: Repository -> $REPO"
          echo "DEBUG: Permission -> $PERMISSION"
          echo "DEBUG: Authorisation -> $AUTHORISED"
          
          echo "authorised=$AUTHORISED" >> $GITHUB_OUTPUT

  update-database:
    # If the workflow was triggered by closing an issue, only run if the issue contains the 'add-plugin' label.
    #if: |
    #  needs.check-permission.outputs.authorised == 'true' &&
    #  (github.event_name == 'workflow_dispatch' || github.event.label.name == 'add-plugin')
    runs-on: ubuntu-latest
    steps:
      - name: Debug condition parts
        run: |
          echo "Authorised: ${{ needs.check-permission.outputs.authorised }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Label name: ${{ github.event.label.name || 'undefined' }}"

      - name: Checkout repo content
        uses: actions/checkout@v4
      - name: Retrieve database timestamp
        id: time
        run: echo "time=${{ github.event.repository.updated_at }}" >> $GITHUB_OUTPUT
      - name: Retrieve URL submission
        id: url
        run: |
          if [ "${{ github.event_name }}" == "issues" ]; then
            echo "url=${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          else
            echo "url=''" >> $GITHUB_OUTPUT
          fi
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r generation/requirements.txt
      - name: Run Python script
        run: python generation/update_database.py ${{ steps.time.outputs.time }} ${{ steps.url.outputs.url }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || (git commit -a -m "Update database." --allow-empty)
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
